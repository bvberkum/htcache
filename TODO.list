./Protocol.py:116:        # XXX: matches on path only
./Protocol.py:342:            # TODO: store in headerdict
./Protocol.py:417:            # FIXME: update last-modified?
./Protocol.py:437:            pass # TODO: srcrefs, mediatype, charset, language, 
./Resource.py:12:# XXX dont use cjson, its buggy, see comments at
./Resource.py:179:        # TODO: documents
./CHANGELOG.rst:1:TODO htcache version 1.0 (planned but non-committed)
./newcache.rst:23:XXX: could a deeper tree be created by symlinking? think so..
./Cache.py:53:            "FIXME: implement saving in other roots"
./init.sh:7:# FIXME: this is inadequate and fragile, also htcache may want to handle
./init.sh:45:        # TODO: check htcache status before redirecting output to lock
./Response.py:52:        # TODO: on/off: self.__hash = hashlib.sha1()
./Response.py:63:          # TODO: parse mediatype, charset, language..
./Response.py:136:        # XXX: store hash for new recv'd content
./Request.py:92:        # TODO: keep entity headers, strip other message headers from args
./Request.py:161:        # XXX: used before protocol is determined,  assert self.Protocol
./htcache:76:# XXX: more neat in fiber than here, move.
./Params.py:14:ONLINE = True # XXX:bvb: useless..
./Params.py:52:     --limit RATE    FIXME: limit download rate at a fixed K/s
./Params.py:62:  -n --nocache FILE  TODO: bypass caching for requests based on regex pattern.
./Params.py:104:        pass # XXX
./unit-test:59:    # XXX: if dumping headers, some script needs to make sure only entity
./main.rst:11:        - FIXME: Not working!
./main.rst:13:        - TODO: contains unused? CachedResource code , integrate or  remove
./main.rst:21:        - FIXME: runs somewhat, must make fixes to run all HTTP tests?
./main.rst:144:  the first argument being prefixed with '?'. FIXME: does not solve anything?
./main.rst:176:TODO: a file-based header storage or perhaps even an Apache mod_asis
