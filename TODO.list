./protocol-test:4:- FIXME: should cover a good deal of HTTP stuff.
./main.rst:280:  the first argument being prefixed with '?'. FIXME: does not solve anything?
./Rules.py:165:                    log('FIXME: Renaming: %s --> %s' % (fpath2, fpath), threshold=Params.LOG_NOTE)
./Rules.py:175:# FIXME: drop rules
./Rules.py:207:# FIXME: parse rewrite rules

./Resource.py:236:        raise "TODO"
./Resource.py:243:        # TODO: set_broken
./Resource.py:331:# TODO: find_records by attribute query
./Resource.py:367:# TODO: integrate with other print_info
./Resource.py:394:        # TODO: documents
./Protocol.py:245:        # TODO: RFC 2616 14.9.4: Cache revalidation and reload controls
./Protocol.py:269:                # TODO: Validate client validator against cached entry
./Protocol.py:277:        # TODO: Store relationship with referer
./Protocol.py:481:        # TODO: load http entity, perhaps response headers from shelve
./Request.py:3:TODO: determine cachability.
./main.rst:28:            - TODO: ``--keep-cache`` mark location revisioning
./main.rst:29:            - TODO: ``--validate-tree`` resource cache should match size, checksum
./main.rst:30:            - TODO: ``--validate-joinlist`` resource should have been rewritten
./main.rst:31:            - TODO: ``--validate-joinlist --auto`` rename if possible
./main.rst:32:            - TODO: ``--validate-lists`` 
./main.rst:33:            - TODO: ``--check-joinlist`` run testlines from JOIN,  
./main.rst:34:            - TODO: ``--check-lists``
./main.rst:35:            - TODO: abstract, refactor query/maintenance mode handling. Allow
./main.rst:37:            - TODO: ``--print-allrecords`` simply dump?
./main.rst:38:            - TODO: ``--print-record`` query
./main.rst:39:            - TODO: ``--print-records`` query
./main.rst:40:            - TODO: ``--print-media`` query
./main.rst:233:TODO: Rewriting and content filtering is not implemented.
./main.rst:316:TODO: a file-based header storage or perhaps even an Apache mod_asis
./CHANGELOG.rst:1:TODO htcache version 1.0 (planned)
./Response.py:70:        # TODO: on/off:
./Response.py:82:          # TODO: parse mediatype, charset, language..
./Response.py:169:        # TODO: store hash for new recv'd content
./Response.py:394:        # TODO: echos only
./Command.py:78:                # TODO: allow port in address
./Command.py:113:                "TODO: limit download rate at a fixed K/s", dict(
./Command.py:191:                "TODO: bypass caching for requests based on URL regex pattern", 
./Command.py:245:                "TODO: ", _cmd()
./Command.py:280:#                "TODO: iterate cache references", _cmd()
./Command.py:283:                "TODO: Remove resources no longer online.", _cmd()
./Command.py:290:                "TODO: Symlink duplicate content, check by size and hash."
./Command.py:293:#     TODO --print-mode line|tree
./Command.py:294:#     TODO --print-url
./Command.py:295:#     TODO --print-path
./Command.py:297:#     TODO --print-documents
./Command.py:298:#     TODO --print-videos
./Command.py:299:#     TODO --print-audio
./Command.py:300:#     TODO --print-images
./init.sh:42:        # TODO: check htcache status before redirecting output to lock

./newcache.rst:23:XXX: could a deeper tree be created by symlinking? think so..
./Cache.py:67:                # XXX: todo: keep largest partial only
./Resource.py:87:        # XXX:
./Resource.py:132:        # XXX: work in progress
./Resource.py:142:# XXX:        HTTP.map_headers_to_descriptor( request.headers )
./Resource.py:226:        #            "XXX: update"
./Resource.py:447:# XXX old
./Resource.py:485:# XXX: hardcoded paths.. replace once Cache/Resource is properly implemented
./Resource.py:493:# XXX: cannot reconstruct--, or should always normalize?
./Resource.py:525:# XXX: hardcoded paths.. replace once Cache/Resource is properly implemented
./Resource.py:533:# XXX: cannot reconstruct--, or should always normalize?
./Protocol.py:92:    "XXX: old indicator to track hashsum of response entity."
./Protocol.py:119:        # XXX: record rewrites in descriptor DB?
./Protocol.py:142:        # XXX: Respond by writing message as plain text, e.g echo/debug it:
./Protocol.py:267:                # XXX: treat as unspecified end-to-end revalidation
./Protocol.py:333:                key = key.title() # XXX: bad? :)
./Protocol.py:389:            # XXX: should create preliminary Descriptor, or delete file.
./Protocol.py:415:# XXX:
./Protocol.py:456:# XXX
./Protocol.py:493:                # XXX: Try again, should make a list of alternate (but invalid) date formats
./Protocol.py:529:            log("XXX: Rewriting HTML resource: "+self.url)
./Request.py:166:            # XXX self.Protocol = Protocol.BlindProtocol
./Request.py:194:# XXX: need a test for this
./Request.py:234:        # XXX: If-Range
./Request.py:267:        # XXX: used before protocol is determined,  assert self.Protocol
./control.rst:21:        May cache and serve. XXX: while fresh?
./HTCache.hx:34:        // XXX: figure out a way to set global cookie? iframe from proxy?
./util.py:3:# XXX: Dont use cjson, its buggy, see comments at
./Response.py:89:# XXX: this may need to be on js serving..
./Command.py:99:# XXX: write macro to fix this:
./Command.py:111:#/XXX
./Command.py:127:                "XXX: try ipv6 addresses if available", dict(
./Command.py:152:            (("--data-dir",), "XXX: Change location of var datafiles. Note: cannot change "
./Command.py:156:            (("--static-dir",), "XXX: Change location of static datafiles.", 
./Command.py:164:            (("-b", "--backend",), "XXX:initialize metadata backend from reference", dict(
./Command.py:195:                "XXX: content rewrite any webresource by selecting on URL or ...??", 
./Command.py:201:                " may be a problem if its contents has any differences. XXX: read"
./Command.py:206:                "XXX: append manual rule", dict()
./Command.py:209:                "XXX: validate and run tests", 
./Command.py:213:                "XXX: re-run", 
./Command.py:219:                "increase output, XXX: use twice to show http headers", dict(
./Command.py:232:                "XXX: turn of output printing?", dict(
./Command.py:260:                "XXX: Query for one or more records by regular expression.", 
./Command.py:278:# XXX:
./Command.py:414:# XXX:
./Command.py:443:# XXX: Maintenance
./Terminal.py:1:# XXX: unintegrated ANSI terminal wrapper
./Rules.py:33:# XXX: could put tab back into JOIN rules file, also parse continuous
./Params.py:52:ALTTIMEFMT = '%a, %d %b %H:%M:%S CEST %Y' # XXX: foksuk.nl
./system-test:97:# XXX: could not figure out a way to make wget save (headers) for non 200
./system-test:270:    # XXX: No headers are ever present, need to check if older versions did
./htcache:9:# XXX: development tooling:
./htcache:36:XXX: This also allows local lookup of resources, ie. to rewrite the cache location
./htcache:123:        # XXX: programming catch


