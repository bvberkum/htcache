:project: htt:bp://freshmeat.net/projects/http-replicator
:bzr-branch: http://launchpad.net/~mpe/+junk/http-replicator.mpe

Based on the http-replicator_4.0alpha2 branch found on the web.

Current 4.0alpha3.

Changes in functionality:
 - Ignore host/path based on RegEx patterns read from file. Each line is a
   complete pattern, matched against request URI.
 - Created Sys-V init sh script, init.sh.
   cp/rename it to /etc/init.d/ and make appropiate symlinks. Edit it to reflect
   systems locations. Also see http://www.debian-administration.org/articles/28
   for Debian specifics.
 - Including HTTP Via header in requests to origin server.
 - Keeping of descriptors for each cached file in 'flat' DB.
 - Alternative cache directory layouts.

TODO:
- Writing to client fails randomly, probably malformed headers?
- Some date headers fail to parse.
- There is a version with other cl-options, it uses stdlib asyncore
  check: 

   * http://web.archive.org/web/20070816213819/gertjan.freezope.org/replicator/http-replicator
   * http://web.archive.org/web/20071214200800/gertjan.freezope.org/replicator
 
- Make release? add this to RELNOTES/CHANGELOG, update and reorganize manual..

Other cache backends
~~~~~~~~~~~~~~~~~~~~
HR uses a file-based Cache which produces a file-tree similar to that of ``wget
-r``. This creates some problems with long filenames and the characters that
appear in HTTP query parts.

Additional backends are provided and an option to change them (``--cache TYPE``):

- caches.FileTreeQ - wget and HR fail on long filenames, usually caused by long
  query parts. FileTreeQ encodes each query argument into a separate directory,
  the first argument being prefixed with '?'.
- caches.FileTreeQH - Converts query into a hashsum. This one makes a bit more
  sense because queries are not hierarchical. The hashsum is encoded to a
  directory, the name prefixed with '#'.
- caches.HTContentStore - TODO: a content-hash index in dba2 api compat



  0.14     File "/home/berend/project/http-replicator/http-replicator.mpe/fiber.py", line 53, in step
  0.14       state = self.__generator.next()
  0.15     File "/usr/bin/http-replicator", line 51, in Replicator
  0.15       response.send( client )
  0.15     File "/home/berend/project/http-replicator/http-replicator.mpe/Response.py", line 119, in send
  0.15       self.__pos += sock.send( chunk )

